todo
----
* Documentation
  * README.md
    * introduction, persistent collections
    * java.util.Collection (both mutable / immutable) etc. --> drop-in replacement for use with existing APIs
    * building etc.
  * package.java

* ajjpj.com
  * landing page


* ASortedMap
  * ASortedMap should implement NavigableMap
  * ASortedMap: upper bound for iterator methods
  * ASortedMap.reverseIterator()

* ASortedSet
  * ASortedSet.reverseIterator()
  * ASortedSet javadoc: comments with  T O D O  in them
  * unit tests
    * ASortedSet.countInRange,
    * ASortedSet.slice
    * ATreeSet methods in general

* Benchmark: tuning of RedBlackTree

---------------------------------------------------------------------------------------------------------------

* AbstractImmutableSet

* add mutable JU code to benchmarks

* CHAMP algorithm

* API
  * ACollection: permutations, combinations
  * ACollection: flatten
  * AIterator methods: see decompiled TreeIterator

  * partial order


//AList: zip, zipWithIndex
// sortWith, sortBy, shuffle --> ACollection, produces AList?
// indexOfSlice (2x), lastIndexOfSlice (2x), containsSlice
// partition (ACollection?!), groupBy (ACollection?), splitAt, span, distinct (ACollection?!)
// reverseMap
// corresponds
AList.combinations
